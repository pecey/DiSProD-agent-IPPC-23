
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFleftASSIGN_EQUALleftEXISTSleftFORALLleftAGG_OPERARGMAXARGMINleftEQUIVleftIMPLYleftORleftANDAMPERSANDleftNOTleftCOMP_EQUALNEQLESSLESSEQGREATERGREATEREQleftPLUSMINUSleftTIMESDIVrightUMINUSACTION ACTION_PRECONDITIONS AMPERSAND AND ARGMAX ARGMIN ASSIGN_EQUAL BERNOULLI BETA BINOMIAL BOOL CASE CAUCHY CDFS CHISQUARE COLON COLUMN COMMA COMP_EQUAL CPFS DEFAULT DERIVED_FLUENT DET DIRAC_DELTA DIRICHLET DISCOUNT DISCRETE DIV DOLLAR_SIGN DOMAIN DOT DOUBLE ELSE ENUM_VAL EQUIV EXISTS EXPONENTIAL FALSE FORALL GAMMA GEOMETRIC GOMPERTZ GREATER GREATEREQ GUMBEL HORIZON IDENT IF IMPLY INIT_STATE INSTANCE INT INTEGER INTERMEDIATE INVERSE KRON_DELTA KUMARASWAMY LAPLACE LBRACK LCURLY LESS LESSEQ LEVEL LPAREN MAX_NONDEF_ACTIONS MINUS MULTINOMIAL MULTIVARIATENORMAL MULTIVARIATESTUDENT NEGATIVEBINOMIAL NEG_INF NEQ NON_FLUENT NON_FLUENTS NORMAL NOT OBJECT OBJECTS OBSERVATION OR OTHERWISE PARETO PLUS POISSON POS_INF PSEUDOINVERSE PVARIABLES QUESTION RBRACK RCURLY REAL REQUIREMENTS REWARD ROW RPAREN SEMI STATE STATE_ACTION_CONSTRAINTS STATE_INVARIANTS STUDENT SWITCH TERMINAL TERMINATE_WHEN TERMINATION THEN TIMES TRUE TYPES UNDERSCORE UNIFORM UNNORMDISCRETE VAR WEIBULLrddl : rddl_blockrddl_block : rddl_block domain_block\n                      | rddl_block instance_block\n                      | rddl_block nonfluent_block\n                      | emptydomain_block : DOMAIN IDENT LCURLY req_section domain_list RCURLYreq_section : REQUIREMENTS ASSIGN_EQUAL LCURLY string_list RCURLY SEMI\n                       | REQUIREMENTS LCURLY string_list RCURLY SEMI\n                       | emptydomain_list : domain_list type_section\n                       | domain_list pvar_section\n                       | domain_list cpf_section\n                       | domain_list reward_section\n                       | domain_list termination_section\n                       | domain_list action_precond_section\n                       | domain_list state_action_constraint_section\n                       | domain_list state_invariant_section\n                       | emptytype_section : TYPES LCURLY type_list RCURLY SEMItype_list : type_list type_def\n                     | emptytype_def : IDENT COLON OBJECT SEMI\n                    | IDENT COLON LCURLY enum_list RCURLY SEMIenum_list : enum_list COMMA ENUM_VAL\n                     | ENUM_VAL\n                     | emptypvar_section : PVARIABLES LCURLY pvar_list RCURLY SEMIpvar_list : pvar_list pvar_def\n                     | emptypvar_def : nonfluent_def\n                    | statefluent_def\n                    | actionfluent_def\n                    | intermfluent_def\n                    | derivedfluent_def\n                    | observfluent_defnonfluent_def : IDENT param_list LCURLY NON_FLUENT COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIstatefluent_def : IDENT param_list LCURLY STATE COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIactionfluent_def : IDENT param_list LCURLY ACTION COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMIintermfluent_def : IDENT param_list LCURLY INTERMEDIATE COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI\n                            | IDENT param_list LCURLY INTERMEDIATE COMMA type_spec RCURLY SEMIderivedfluent_def : IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI\n                             | IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec RCURLY SEMIobservfluent_def : IDENT param_list LCURLY OBSERVATION COMMA type_spec RCURLY SEMIcpf_section : cpf_header LCURLY cpf_list RCURLY SEMIcpf_header : CPFS\n                      | CDFScpf_list : cpf_list cpf_def\n                    | emptycpf_def : pvar_expr ASSIGN_EQUAL expr SEMI\n                   | pvar_expr ASSIGN_EQUAL randomvector_expr SEMIreward_section : REWARD ASSIGN_EQUAL expr SEMItermination_section  : TERMINATION LCURLY termination_list RCURLY SEMI\n                                |  TERMINATION LCURLY RCURLY SEMItermination_list : termination_list termination_cond_def\n                            | termination_cond_deftermination_cond_def : expr SEMIaction_precond_section : ACTION_PRECONDITIONS LCURLY action_precond_list RCURLY SEMI\n                                  | ACTION_PRECONDITIONS LCURLY RCURLY SEMIaction_precond_list : action_precond_list action_precond_def\n                               | action_precond_defaction_precond_def : expr SEMIstate_action_constraint_section : STATE_ACTION_CONSTRAINTS LCURLY state_cons_list RCURLY SEMI\n                                           | STATE_ACTION_CONSTRAINTS LCURLY RCURLY SEMIstate_cons_list : state_cons_list state_cons_def\n                           | state_cons_defstate_cons_def : expr SEMIstate_invariant_section : STATE_INVARIANTS LCURLY state_invariant_list RCURLY SEMI\n                                   | STATE_INVARIANTS LCURLY RCURLY SEMIstate_invariant_list : state_invariant_list state_invariant_def\n                                | state_invariant_defstate_invariant_def : expr SEMIterm_list : term_list COMMA term\n                     | term\n                     | emptyterm : VAR\n                | ENUM_VAL\n                | pvar_expr\n                | argmaxmin_exprexpr : pvar_expr\n                | group_expr\n                | function_expr\n                | relational_expr\n                | boolean_expr\n                | quantifier_expr\n                | numerical_expr\n                | aggregation_expr\n                | argmaxmin_expr\n                | matrix_expr\n                | control_expr\n                | randomvar_expr\n                | randomvar_from_pvar_exprpvar_expr : IDENT LPAREN term_list RPAREN\n                     | IDENT\n                     | ENUM_VAL\n                     | VARgroup_expr : LBRACK expr RBRACK\n                      | LPAREN expr RPARENfunction_expr : IDENT LBRACK expr_list RBRACKrelational_expr : expr COMP_EQUAL expr\n                           | expr NEQ expr\n                           | expr GREATER expr\n                           | expr GREATEREQ expr\n                           | expr LESS expr\n                           | expr LESSEQ exprboolean_expr : expr AND expr\n                        | expr AMPERSAND expr\n                        | expr OR expr\n                        | expr IMPLY expr\n                        | expr EQUIV expr\n                        | NOT expr %prec UMINUS\n                        | bool_typequantifier_expr : FORALL UNDERSCORE LCURLY typed_var_list RCURLY expr %prec FORALL\n                           | EXISTS UNDERSCORE LCURLY typed_var_list RCURLY expr %prec EXISTSnumerical_expr : expr PLUS expr\n                          | expr MINUS expr\n                          | expr TIMES expr\n                          | expr DIV expr\n                          | MINUS expr %prec UMINUS\n                          | PLUS expr %prec UMINUS\n                          | INTEGER\n                          | DOUBLEaggregation_expr : IDENT UNDERSCORE LCURLY typed_var_list RCURLY expr %prec AGG_OPERargmaxmin_expr : ARGMAX UNDERSCORE LCURLY typed_var_list RCURLY expr %prec ARGMAX\n                          | ARGMIN UNDERSCORE LCURLY typed_var_list RCURLY expr %prec ARGMINcontrol_expr : IF LPAREN expr RPAREN THEN expr ELSE expr %prec IF\n                        | SWITCH LPAREN expr RPAREN LCURLY case_list RCURLYrandomvar_expr : BERNOULLI LPAREN expr RPAREN\n                          | DIRAC_DELTA LPAREN expr RPAREN\n                          | KRON_DELTA LPAREN expr RPAREN\n                          | UNIFORM LPAREN expr COMMA expr RPAREN\n                          | NORMAL LPAREN expr COMMA expr RPAREN\n                          | EXPONENTIAL LPAREN expr RPAREN\n                          | DISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN\n                          | UNNORMDISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN\n                          | DIRICHLET LPAREN IDENT COMMA expr RPAREN\n                          | POISSON LPAREN expr RPAREN\n                          | WEIBULL LPAREN expr COMMA expr RPAREN\n                          | GAMMA   LPAREN expr COMMA expr RPAREN\n                          | BINOMIAL   LPAREN expr COMMA expr RPAREN\n                          | NEGATIVEBINOMIAL   LPAREN expr COMMA expr RPAREN\n                          | BETA   LPAREN expr COMMA expr RPAREN\n                          | GEOMETRIC LPAREN expr RPAREN\n                          | PARETO   LPAREN expr COMMA expr RPAREN\n                          | STUDENT LPAREN expr RPAREN\n                          | GUMBEL   LPAREN expr COMMA expr RPAREN\n                          | LAPLACE LPAREN expr COMMA expr RPAREN\n                          | CAUCHY LPAREN expr COMMA expr RPAREN\n                          | GOMPERTZ LPAREN expr COMMA expr RPAREN\n                          | CHISQUARE LPAREN expr RPAREN\n                          | KUMARASWAMY LPAREN expr COMMA expr RPARENrandomvar_from_pvar_expr : DISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN\n                                    | UNNORMDISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPARENrandomvector_expr : MULTIVARIATENORMAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN\n                             | MULTIVARIATESTUDENT LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN\n                             | DIRICHLET LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr RPAREN\n                             | MULTINOMIAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPARENrandomvector_pvar_expr : IDENT LPAREN randomvector_term_list RPAREN\n                                  | IDENTrandomvector_term_list : randomvector_term_list COMMA randomvector_term\n                                  | randomvector_term\n                                  | emptyrandomvector_term : VAR\n                             | ENUM_VAL\n                             | UNDERSCOREmatrix_expr : DET UNDERSCORE LCURLY typed_var COMMA typed_var RCURLY expr %prec AGG_OPER\n                       | INVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACK\n                       | PSEUDOINVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACKtyped_var_list : typed_var_list COMMA typed_var\n                          | typed_vartyped_var : VAR COLON IDENTexpr_list : expr_list COMMA expr\n                     | exprcase_list : case_list COMMA case_def\n                     | case_defcase_def : CASE term COLON expr\n                    | DEFAULT COLON exprlconst_case_list : lconst COLON expr\n                            | lconst COLON OTHERWISE\n                            | lconst_case_list COMMA lconst COLON exprlconst : IDENT\n                  | ENUM_VALparam_list : COLON\n                      | LPAREN param_list2 RPAREN COLONparam_list2 : type_spec\n                       | param_list2 COMMA type_spectype_spec : IDENT\n                     | INT\n                     | REAL\n                     | BOOLrange_const : bool_type\n                       | double_type\n                       | int_type\n                       | ENUM_VAL\n                       | IDENTbool_type : TRUE\n                     | FALSEdouble_type : DOUBLE\n                       | MINUS DOUBLE\n                       | POS_INF\n                       | NEG_INFint_type : INTEGER\n                    | MINUS INTEGERpos_int_type_or_pos_inf : INTEGER\n                                   | POS_INFinstance_block : INSTANCE IDENT LCURLY instance_list RCURLYinstance_list : instance_list domain_section\n                         | instance_list nonfluents_section\n                         | instance_list init_non_fluent_section\n                         | instance_list objects_section\n                         | instance_list init_state_section\n                         | instance_list max_nondef_actions_section\n                         | instance_list horizon_spec_section\n                         | instance_list discount_section\n                         | emptydomain_section : DOMAIN ASSIGN_EQUAL IDENT SEMInonfluents_section : NON_FLUENTS ASSIGN_EQUAL IDENT SEMIobjects_section : OBJECTS LCURLY objects_list RCURLY SEMIinit_state_section : INIT_STATE LCURLY pvar_inst_list RCURLY SEMImax_nondef_actions_section : MAX_NONDEF_ACTIONS ASSIGN_EQUAL pos_int_type_or_pos_inf SEMIhorizon_spec_section : HORIZON ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI\n                                | HORIZON ASSIGN_EQUAL TERMINATE_WHEN LPAREN expr RPARENdiscount_section : DISCOUNT ASSIGN_EQUAL DOUBLE SEMInonfluent_block : NON_FLUENTS IDENT LCURLY nonfluent_list RCURLYnonfluent_list : nonfluent_list domain_section\n                          | nonfluent_list objects_section\n                          | nonfluent_list init_non_fluent_section\n                          | emptyinit_non_fluent_section : NON_FLUENTS LCURLY pvar_inst_list RCURLY SEMIobjects_list : objects_list objects_def\n                        | objects_def\n                        | emptyobjects_def : IDENT COLON LCURLY object_const_list RCURLY SEMIobject_const_list : object_const_list COMMA IDENT\n                             | IDENTpvar_inst_list : pvar_inst_list pvar_inst_def\n                          | pvar_inst_defpvar_inst_def : IDENT LPAREN lconst_list RPAREN SEMI\n                         | IDENT SEMI\n                         | NOT IDENT LPAREN lconst_list RPAREN SEMI\n                         | NOT IDENT SEMI\n                         | IDENT LPAREN lconst_list RPAREN ASSIGN_EQUAL range_const SEMI\n                         | IDENT ASSIGN_EQUAL range_const SEMIlconst_list : lconst_list COMMA lconst\n                       | lconststring_list : string_list COMMA IDENT\n                       | IDENT\n                       | emptyempty :'
    
_lr_action_items = {'DOMAIN':([0,2,3,4,5,6,14,15,19,20,21,22,27,28,29,30,31,32,33,34,35,44,45,46,47,48,192,193,204,205,207,300,318,320,404,],[-248,7,-5,-2,-3,-4,-248,-248,36,-214,36,-227,-205,-206,-207,-208,-209,-210,-211,-212,-213,-223,-224,-225,-226,-6,-215,-216,-219,-220,-222,-228,-217,-218,-221,]),'INSTANCE':([0,2,3,4,5,6,27,44,48,],[-248,8,-5,-2,-3,-4,-205,-223,-6,]),'NON_FLUENTS':([0,2,3,4,5,6,14,15,19,20,21,22,27,28,29,30,31,32,33,34,35,44,45,46,47,48,192,193,204,205,207,300,318,320,404,],[-248,9,-5,-2,-3,-4,-248,-248,37,-214,43,-227,-205,-206,-207,-208,-209,-210,-211,-212,-213,-223,-224,-225,-226,-6,-215,-216,-219,-220,-222,-228,-217,-218,-221,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rddl':([0,],[1,]),'rddl_block':([0,],[2,]),'empty':([0,13,14,15,16,26,67,74,79,80,81,240,406,482,483,484,485,650,],[3,18,20,22,24,70,70,98,108,110,112,347,471,535,535,535,535,535,]),'domain_block':([2,],[4,]),'instance_block':([2,],[5,]),'nonfluent_block':([2,],[6,]),'req_section':([13,],[16,]),'instance_list':([14,],[19,]),'nonfluent_list':([15,],[21,]),'domain_list':([16,],[23,]),'domain_section':([19,21,],[28,45,]),'nonfluents_section':([19,],[29,]),'init_non_fluent_section':([19,21,],[30,47,]),'objects_section':([19,21,],[31,46,]),'init_state_section':([19,],[32,]),'max_nondef_actions_section':([19,],[33,]),'horizon_spec_section':([19,],[34,]),'discount_section':([19,],[35,]),'type_section':([23,],[49,]),'pvar_section':([23,],[50,]),'cpf_section':([23,],[51,]),'reward_section':([23,],[52,]),'termination_section':([23,],[53,]),'action_precond_section':([23,],[54,]),'state_action_constraint_section':([23,],[55,]),'state_invariant_section':([23,],[56,]),'cpf_header':([23,],[59,]),'string_list':([26,67,],[68,87,]),'pvar_inst_list':([73,75,],[92,100,]),'pvar_inst_def':([73,75,92,100,],[93,93,195,195,]),'objects_list':([74,],[96,]),'objects_def':([74,96,],[97,201,]),'pos_int_type_or_pos_inf':([76,77,],[101,104,]),'type_list':([79,],[107,]),'pvar_list':([80,],[109,]),'cpf_list':([81,],[111,]),'expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[113,176,180,184,188,243,244,245,248,249,176,180,184,188,321,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,353,364,365,366,367,368,369,370,371,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,414,487,500,501,507,508,509,510,511,512,513,514,515,516,517,518,542,545,546,547,548,552,600,602,603,617,620,623,642,643,676,677,]),'pvar_expr':([82,83,84,85,86,111,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,421,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,555,561,562,564,591,594,598,622,624,665,666,],[114,114,114,114,114,222,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,350,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,350,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,350,114,114,114,114,114,114,114,114,114,114,]),'group_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'function_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'relational_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'boolean_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'quantifier_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'numerical_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'aggregation_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'argmaxmin_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,421,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,555,561,562,564,591,594,598,622,624,665,666,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,351,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,351,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,351,122,122,122,122,122,122,122,122,122,122,]),'matrix_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'control_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'randomvar_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'randomvar_from_pvar_expr':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,488,491,492,493,494,498,561,562,564,591,594,598,622,624,665,666,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'bool_type':([82,83,84,85,86,128,131,132,136,137,173,177,181,185,198,206,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,255,256,257,258,259,260,261,262,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,329,423,439,440,446,448,449,450,451,452,454,456,457,458,459,461,463,488,491,492,493,494,498,561,562,564,591,594,598,622,624,644,645,646,647,648,665,666,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,307,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,307,133,133,133,133,133,133,133,133,133,133,133,133,133,133,307,307,307,307,307,133,133,]),'termination_list':([83,],[173,]),'termination_cond_def':([83,173,],[175,284,]),'action_precond_list':([84,],[177,]),'action_precond_def':([84,177,],[179,288,]),'state_cons_list':([85,],[181,]),'state_cons_def':([85,181,],[183,292,]),'state_invariant_list':([86,],[185,]),'state_invariant_def':([86,185,],[187,296,]),'type_def':([107,],[209,]),'pvar_def':([109,],[212,]),'nonfluent_def':([109,],[213,]),'statefluent_def':([109,],[214,]),'actionfluent_def':([109,],[215,]),'intermfluent_def':([109,],[216,]),'derivedfluent_def':([109,],[217,]),'observfluent_def':([109,],[218,]),'cpf_def':([111,],[221,]),'lconst_list':([196,316,],[302,401,]),'lconst':([196,316,397,442,444,559,],[303,303,464,503,503,599,]),'range_const':([198,463,644,645,646,647,648,],[306,519,656,657,658,659,660,]),'double_type':([198,463,644,645,646,647,648,],[308,308,308,308,308,308,308,]),'int_type':([198,463,644,645,646,647,648,],[309,309,309,309,309,309,309,]),'param_list':([219,],[325,]),'term_list':([240,],[345,]),'term':([240,421,555,],[346,486,597,]),'expr_list':([241,],[352,]),'object_const_list':([319,],[403,]),'param_list2':([327,],[408,]),'type_spec':([327,479,525,526,527,528,529,530,],[409,532,580,581,582,583,584,585,]),'randomvector_expr':([329,],[415,]),'typed_var_list':([354,357,358,359,360,373,375,],[424,427,428,429,430,443,445,]),'typed_var':([354,357,358,359,360,361,373,375,489,495,],[425,425,425,425,425,431,425,425,543,549,]),'enum_list':([406,],[469,]),'lconst_case_list':([442,444,],[502,505,]),'randomvector_term_list':([482,483,484,485,650,],[533,539,540,541,662,]),'randomvector_term':([482,483,484,485,587,650,],[534,534,534,534,613,534,]),'case_list':([499,],[553,]),'case_def':([499,596,],[554,621,]),'randomvector_pvar_expr':([612,614,615,616,649,651,653,674,],[635,637,638,639,661,663,664,683,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rddl","S'",1,None,None,None),
  ('rddl -> rddl_block','rddl',1,'p_rddl','parser.py',272),
  ('rddl_block -> rddl_block domain_block','rddl_block',2,'p_rddl_block','parser.py',276),
  ('rddl_block -> rddl_block instance_block','rddl_block',2,'p_rddl_block','parser.py',277),
  ('rddl_block -> rddl_block nonfluent_block','rddl_block',2,'p_rddl_block','parser.py',278),
  ('rddl_block -> empty','rddl_block',1,'p_rddl_block','parser.py',279),
  ('domain_block -> DOMAIN IDENT LCURLY req_section domain_list RCURLY','domain_block',6,'p_domain_block','parser.py',294),
  ('req_section -> REQUIREMENTS ASSIGN_EQUAL LCURLY string_list RCURLY SEMI','req_section',6,'p_req_section','parser.py',299),
  ('req_section -> REQUIREMENTS LCURLY string_list RCURLY SEMI','req_section',5,'p_req_section','parser.py',300),
  ('req_section -> empty','req_section',1,'p_req_section','parser.py',301),
  ('domain_list -> domain_list type_section','domain_list',2,'p_domain_list','parser.py',309),
  ('domain_list -> domain_list pvar_section','domain_list',2,'p_domain_list','parser.py',310),
  ('domain_list -> domain_list cpf_section','domain_list',2,'p_domain_list','parser.py',311),
  ('domain_list -> domain_list reward_section','domain_list',2,'p_domain_list','parser.py',312),
  ('domain_list -> domain_list termination_section','domain_list',2,'p_domain_list','parser.py',313),
  ('domain_list -> domain_list action_precond_section','domain_list',2,'p_domain_list','parser.py',314),
  ('domain_list -> domain_list state_action_constraint_section','domain_list',2,'p_domain_list','parser.py',315),
  ('domain_list -> domain_list state_invariant_section','domain_list',2,'p_domain_list','parser.py',316),
  ('domain_list -> empty','domain_list',1,'p_domain_list','parser.py',317),
  ('type_section -> TYPES LCURLY type_list RCURLY SEMI','type_section',5,'p_type_section','parser.py',326),
  ('type_list -> type_list type_def','type_list',2,'p_type_list','parser.py',331),
  ('type_list -> empty','type_list',1,'p_type_list','parser.py',332),
  ('type_def -> IDENT COLON OBJECT SEMI','type_def',4,'p_type_def','parser.py',340),
  ('type_def -> IDENT COLON LCURLY enum_list RCURLY SEMI','type_def',6,'p_type_def','parser.py',341),
  ('enum_list -> enum_list COMMA ENUM_VAL','enum_list',3,'p_enum_list','parser.py',348),
  ('enum_list -> ENUM_VAL','enum_list',1,'p_enum_list','parser.py',349),
  ('enum_list -> empty','enum_list',1,'p_enum_list','parser.py',350),
  ('pvar_section -> PVARIABLES LCURLY pvar_list RCURLY SEMI','pvar_section',5,'p_pvar_section','parser.py',360),
  ('pvar_list -> pvar_list pvar_def','pvar_list',2,'p_pvar_list','parser.py',365),
  ('pvar_list -> empty','pvar_list',1,'p_pvar_list','parser.py',366),
  ('pvar_def -> nonfluent_def','pvar_def',1,'p_pvar_def','parser.py',374),
  ('pvar_def -> statefluent_def','pvar_def',1,'p_pvar_def','parser.py',375),
  ('pvar_def -> actionfluent_def','pvar_def',1,'p_pvar_def','parser.py',376),
  ('pvar_def -> intermfluent_def','pvar_def',1,'p_pvar_def','parser.py',377),
  ('pvar_def -> derivedfluent_def','pvar_def',1,'p_pvar_def','parser.py',378),
  ('pvar_def -> observfluent_def','pvar_def',1,'p_pvar_def','parser.py',379),
  ('nonfluent_def -> IDENT param_list LCURLY NON_FLUENT COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','nonfluent_def',12,'p_nonfluent_def','parser.py',383),
  ('statefluent_def -> IDENT param_list LCURLY STATE COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','statefluent_def',12,'p_statefluent_def','parser.py',392),
  ('actionfluent_def -> IDENT param_list LCURLY ACTION COMMA type_spec COMMA DEFAULT ASSIGN_EQUAL range_const RCURLY SEMI','actionfluent_def',12,'p_actionfluent_def','parser.py',399),
  ('intermfluent_def -> IDENT param_list LCURLY INTERMEDIATE COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI','intermfluent_def',12,'p_intermfluent_def','parser.py',406),
  ('intermfluent_def -> IDENT param_list LCURLY INTERMEDIATE COMMA type_spec RCURLY SEMI','intermfluent_def',8,'p_intermfluent_def','parser.py',407),
  ('derivedfluent_def -> IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec COMMA LEVEL ASSIGN_EQUAL range_const RCURLY SEMI','derivedfluent_def',12,'p_derivedfluent_def','parser.py',414),
  ('derivedfluent_def -> IDENT param_list LCURLY DERIVED_FLUENT COMMA type_spec RCURLY SEMI','derivedfluent_def',8,'p_derivedfluent_def','parser.py',415),
  ('observfluent_def -> IDENT param_list LCURLY OBSERVATION COMMA type_spec RCURLY SEMI','observfluent_def',8,'p_observfluent_def','parser.py',422),
  ('cpf_section -> cpf_header LCURLY cpf_list RCURLY SEMI','cpf_section',5,'p_cpf_section','parser.py',426),
  ('cpf_header -> CPFS','cpf_header',1,'p_cpf_header','parser.py',432),
  ('cpf_header -> CDFS','cpf_header',1,'p_cpf_header','parser.py',433),
  ('cpf_list -> cpf_list cpf_def','cpf_list',2,'p_cpf_list','parser.py',437),
  ('cpf_list -> empty','cpf_list',1,'p_cpf_list','parser.py',438),
  ('cpf_def -> pvar_expr ASSIGN_EQUAL expr SEMI','cpf_def',4,'p_cpf_def','parser.py',446),
  ('cpf_def -> pvar_expr ASSIGN_EQUAL randomvector_expr SEMI','cpf_def',4,'p_cpf_def','parser.py',447),
  ('reward_section -> REWARD ASSIGN_EQUAL expr SEMI','reward_section',4,'p_reward_section','parser.py',451),
  ('termination_section -> TERMINATION LCURLY termination_list RCURLY SEMI','termination_section',5,'p_termination_section','parser.py',456),
  ('termination_section -> TERMINATION LCURLY RCURLY SEMI','termination_section',4,'p_termination_section','parser.py',457),
  ('termination_list -> termination_list termination_cond_def','termination_list',2,'p_termination_list','parser.py',466),
  ('termination_list -> termination_cond_def','termination_list',1,'p_termination_list','parser.py',467),
  ('termination_cond_def -> expr SEMI','termination_cond_def',2,'p_termination_cond_def','parser.py',475),
  ('action_precond_section -> ACTION_PRECONDITIONS LCURLY action_precond_list RCURLY SEMI','action_precond_section',5,'p_action_precond_section','parser.py',479),
  ('action_precond_section -> ACTION_PRECONDITIONS LCURLY RCURLY SEMI','action_precond_section',4,'p_action_precond_section','parser.py',480),
  ('action_precond_list -> action_precond_list action_precond_def','action_precond_list',2,'p_action_precond_list','parser.py',488),
  ('action_precond_list -> action_precond_def','action_precond_list',1,'p_action_precond_list','parser.py',489),
  ('action_precond_def -> expr SEMI','action_precond_def',2,'p_action_precond_def','parser.py',497),
  ('state_action_constraint_section -> STATE_ACTION_CONSTRAINTS LCURLY state_cons_list RCURLY SEMI','state_action_constraint_section',5,'p_state_action_constraint_section','parser.py',501),
  ('state_action_constraint_section -> STATE_ACTION_CONSTRAINTS LCURLY RCURLY SEMI','state_action_constraint_section',4,'p_state_action_constraint_section','parser.py',502),
  ('state_cons_list -> state_cons_list state_cons_def','state_cons_list',2,'p_state_cons_list','parser.py',510),
  ('state_cons_list -> state_cons_def','state_cons_list',1,'p_state_cons_list','parser.py',511),
  ('state_cons_def -> expr SEMI','state_cons_def',2,'p_state_cons_def','parser.py',519),
  ('state_invariant_section -> STATE_INVARIANTS LCURLY state_invariant_list RCURLY SEMI','state_invariant_section',5,'p_state_invariant_section','parser.py',523),
  ('state_invariant_section -> STATE_INVARIANTS LCURLY RCURLY SEMI','state_invariant_section',4,'p_state_invariant_section','parser.py',524),
  ('state_invariant_list -> state_invariant_list state_invariant_def','state_invariant_list',2,'p_state_invariant_list','parser.py',532),
  ('state_invariant_list -> state_invariant_def','state_invariant_list',1,'p_state_invariant_list','parser.py',533),
  ('state_invariant_def -> expr SEMI','state_invariant_def',2,'p_state_invariant_def','parser.py',541),
  ('term_list -> term_list COMMA term','term_list',3,'p_term_list','parser.py',545),
  ('term_list -> term','term_list',1,'p_term_list','parser.py',546),
  ('term_list -> empty','term_list',1,'p_term_list','parser.py',547),
  ('term -> VAR','term',1,'p_term','parser.py',557),
  ('term -> ENUM_VAL','term',1,'p_term','parser.py',558),
  ('term -> pvar_expr','term',1,'p_term','parser.py',559),
  ('term -> argmaxmin_expr','term',1,'p_term','parser.py',560),
  ('expr -> pvar_expr','expr',1,'p_expr','parser.py',568),
  ('expr -> group_expr','expr',1,'p_expr','parser.py',569),
  ('expr -> function_expr','expr',1,'p_expr','parser.py',570),
  ('expr -> relational_expr','expr',1,'p_expr','parser.py',571),
  ('expr -> boolean_expr','expr',1,'p_expr','parser.py',572),
  ('expr -> quantifier_expr','expr',1,'p_expr','parser.py',573),
  ('expr -> numerical_expr','expr',1,'p_expr','parser.py',574),
  ('expr -> aggregation_expr','expr',1,'p_expr','parser.py',575),
  ('expr -> argmaxmin_expr','expr',1,'p_expr','parser.py',576),
  ('expr -> matrix_expr','expr',1,'p_expr','parser.py',577),
  ('expr -> control_expr','expr',1,'p_expr','parser.py',578),
  ('expr -> randomvar_expr','expr',1,'p_expr','parser.py',579),
  ('expr -> randomvar_from_pvar_expr','expr',1,'p_expr','parser.py',580),
  ('pvar_expr -> IDENT LPAREN term_list RPAREN','pvar_expr',4,'p_pvar_expr','parser.py',585),
  ('pvar_expr -> IDENT','pvar_expr',1,'p_pvar_expr','parser.py',586),
  ('pvar_expr -> ENUM_VAL','pvar_expr',1,'p_pvar_expr','parser.py',587),
  ('pvar_expr -> VAR','pvar_expr',1,'p_pvar_expr','parser.py',588),
  ('group_expr -> LBRACK expr RBRACK','group_expr',3,'p_group_expr','parser.py',596),
  ('group_expr -> LPAREN expr RPAREN','group_expr',3,'p_group_expr','parser.py',597),
  ('function_expr -> IDENT LBRACK expr_list RBRACK','function_expr',4,'p_function_expr','parser.py',601),
  ('relational_expr -> expr COMP_EQUAL expr','relational_expr',3,'p_relational_expr','parser.py',605),
  ('relational_expr -> expr NEQ expr','relational_expr',3,'p_relational_expr','parser.py',606),
  ('relational_expr -> expr GREATER expr','relational_expr',3,'p_relational_expr','parser.py',607),
  ('relational_expr -> expr GREATEREQ expr','relational_expr',3,'p_relational_expr','parser.py',608),
  ('relational_expr -> expr LESS expr','relational_expr',3,'p_relational_expr','parser.py',609),
  ('relational_expr -> expr LESSEQ expr','relational_expr',3,'p_relational_expr','parser.py',610),
  ('boolean_expr -> expr AND expr','boolean_expr',3,'p_boolean_expr','parser.py',614),
  ('boolean_expr -> expr AMPERSAND expr','boolean_expr',3,'p_boolean_expr','parser.py',615),
  ('boolean_expr -> expr OR expr','boolean_expr',3,'p_boolean_expr','parser.py',616),
  ('boolean_expr -> expr IMPLY expr','boolean_expr',3,'p_boolean_expr','parser.py',617),
  ('boolean_expr -> expr EQUIV expr','boolean_expr',3,'p_boolean_expr','parser.py',618),
  ('boolean_expr -> NOT expr','boolean_expr',2,'p_boolean_expr','parser.py',619),
  ('boolean_expr -> bool_type','boolean_expr',1,'p_boolean_expr','parser.py',620),
  ('quantifier_expr -> FORALL UNDERSCORE LCURLY typed_var_list RCURLY expr','quantifier_expr',6,'p_quantifier_expr','parser.py',629),
  ('quantifier_expr -> EXISTS UNDERSCORE LCURLY typed_var_list RCURLY expr','quantifier_expr',6,'p_quantifier_expr','parser.py',630),
  ('numerical_expr -> expr PLUS expr','numerical_expr',3,'p_numerical_expr','parser.py',634),
  ('numerical_expr -> expr MINUS expr','numerical_expr',3,'p_numerical_expr','parser.py',635),
  ('numerical_expr -> expr TIMES expr','numerical_expr',3,'p_numerical_expr','parser.py',636),
  ('numerical_expr -> expr DIV expr','numerical_expr',3,'p_numerical_expr','parser.py',637),
  ('numerical_expr -> MINUS expr','numerical_expr',2,'p_numerical_expr','parser.py',638),
  ('numerical_expr -> PLUS expr','numerical_expr',2,'p_numerical_expr','parser.py',639),
  ('numerical_expr -> INTEGER','numerical_expr',1,'p_numerical_expr','parser.py',640),
  ('numerical_expr -> DOUBLE','numerical_expr',1,'p_numerical_expr','parser.py',641),
  ('aggregation_expr -> IDENT UNDERSCORE LCURLY typed_var_list RCURLY expr','aggregation_expr',6,'p_aggregation_expr','parser.py',650),
  ('argmaxmin_expr -> ARGMAX UNDERSCORE LCURLY typed_var_list RCURLY expr','argmaxmin_expr',6,'p_argmaxmin_expr','parser.py',655),
  ('argmaxmin_expr -> ARGMIN UNDERSCORE LCURLY typed_var_list RCURLY expr','argmaxmin_expr',6,'p_argmaxmin_expr','parser.py',656),
  ('control_expr -> IF LPAREN expr RPAREN THEN expr ELSE expr','control_expr',8,'p_control_expr','parser.py',660),
  ('control_expr -> SWITCH LPAREN expr RPAREN LCURLY case_list RCURLY','control_expr',7,'p_control_expr','parser.py',661),
  ('randomvar_expr -> BERNOULLI LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',671),
  ('randomvar_expr -> DIRAC_DELTA LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',672),
  ('randomvar_expr -> KRON_DELTA LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',673),
  ('randomvar_expr -> UNIFORM LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',674),
  ('randomvar_expr -> NORMAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',675),
  ('randomvar_expr -> EXPONENTIAL LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',676),
  ('randomvar_expr -> DISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',677),
  ('randomvar_expr -> UNNORMDISCRETE LPAREN IDENT COMMA lconst_case_list RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',678),
  ('randomvar_expr -> DIRICHLET LPAREN IDENT COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',679),
  ('randomvar_expr -> POISSON LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',680),
  ('randomvar_expr -> WEIBULL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',681),
  ('randomvar_expr -> GAMMA LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',682),
  ('randomvar_expr -> BINOMIAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',683),
  ('randomvar_expr -> NEGATIVEBINOMIAL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',684),
  ('randomvar_expr -> BETA LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',685),
  ('randomvar_expr -> GEOMETRIC LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',686),
  ('randomvar_expr -> PARETO LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',687),
  ('randomvar_expr -> STUDENT LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',688),
  ('randomvar_expr -> GUMBEL LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',689),
  ('randomvar_expr -> LAPLACE LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',690),
  ('randomvar_expr -> CAUCHY LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',691),
  ('randomvar_expr -> GOMPERTZ LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',692),
  ('randomvar_expr -> CHISQUARE LPAREN expr RPAREN','randomvar_expr',4,'p_randomvar_expr','parser.py',693),
  ('randomvar_expr -> KUMARASWAMY LPAREN expr COMMA expr RPAREN','randomvar_expr',6,'p_randomvar_expr','parser.py',694),
  ('randomvar_from_pvar_expr -> DISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN','randomvar_from_pvar_expr',8,'p_randomvar_from_pvar_expr','parser.py',705),
  ('randomvar_from_pvar_expr -> UNNORMDISCRETE UNDERSCORE LCURLY typed_var_list RCURLY LPAREN expr RPAREN','randomvar_from_pvar_expr',8,'p_randomvar_from_pvar_expr','parser.py',706),
  ('randomvector_expr -> MULTIVARIATENORMAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',9,'p_randomvector_expr','parser.py',711),
  ('randomvector_expr -> MULTIVARIATESTUDENT LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',11,'p_randomvector_expr','parser.py',712),
  ('randomvector_expr -> DIRICHLET LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr RPAREN','randomvector_expr',7,'p_randomvector_expr','parser.py',713),
  ('randomvector_expr -> MULTINOMIAL LBRACK randomvector_term_list RBRACK LPAREN randomvector_pvar_expr COMMA randomvector_pvar_expr RPAREN','randomvector_expr',9,'p_randomvector_expr','parser.py',714),
  ('randomvector_pvar_expr -> IDENT LPAREN randomvector_term_list RPAREN','randomvector_pvar_expr',4,'p_randomvector_pvar_expr','parser.py',724),
  ('randomvector_pvar_expr -> IDENT','randomvector_pvar_expr',1,'p_randomvector_pvar_expr','parser.py',725),
  ('randomvector_term_list -> randomvector_term_list COMMA randomvector_term','randomvector_term_list',3,'p_randomvector_term_list','parser.py',733),
  ('randomvector_term_list -> randomvector_term','randomvector_term_list',1,'p_randomvector_term_list','parser.py',734),
  ('randomvector_term_list -> empty','randomvector_term_list',1,'p_randomvector_term_list','parser.py',735),
  ('randomvector_term -> VAR','randomvector_term',1,'p_randomvector_term','parser.py',746),
  ('randomvector_term -> ENUM_VAL','randomvector_term',1,'p_randomvector_term','parser.py',747),
  ('randomvector_term -> UNDERSCORE','randomvector_term',1,'p_randomvector_term','parser.py',748),
  ('matrix_expr -> DET UNDERSCORE LCURLY typed_var COMMA typed_var RCURLY expr','matrix_expr',8,'p_matrix_expr','parser.py',753),
  ('matrix_expr -> INVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACK','matrix_expr',13,'p_matrix_expr','parser.py',754),
  ('matrix_expr -> PSEUDOINVERSE LBRACK ROW ASSIGN_EQUAL VAR COMMA COLUMN ASSIGN_EQUAL VAR RBRACK LBRACK expr RBRACK','matrix_expr',13,'p_matrix_expr','parser.py',755),
  ('typed_var_list -> typed_var_list COMMA typed_var','typed_var_list',3,'p_typed_var_list','parser.py',762),
  ('typed_var_list -> typed_var','typed_var_list',1,'p_typed_var_list','parser.py',763),
  ('typed_var -> VAR COLON IDENT','typed_var',3,'p_typed_var','parser.py',771),
  ('expr_list -> expr_list COMMA expr','expr_list',3,'p_expr_list','parser.py',775),
  ('expr_list -> expr','expr_list',1,'p_expr_list','parser.py',776),
  ('case_list -> case_list COMMA case_def','case_list',3,'p_case_list','parser.py',784),
  ('case_list -> case_def','case_list',1,'p_case_list','parser.py',785),
  ('case_def -> CASE term COLON expr','case_def',4,'p_case_def','parser.py',793),
  ('case_def -> DEFAULT COLON expr','case_def',3,'p_case_def','parser.py',794),
  ('lconst_case_list -> lconst COLON expr','lconst_case_list',3,'p_lconst_case_list','parser.py',801),
  ('lconst_case_list -> lconst COLON OTHERWISE','lconst_case_list',3,'p_lconst_case_list','parser.py',802),
  ('lconst_case_list -> lconst_case_list COMMA lconst COLON expr','lconst_case_list',5,'p_lconst_case_list','parser.py',803),
  ('lconst -> IDENT','lconst',1,'p_lconst','parser.py',811),
  ('lconst -> ENUM_VAL','lconst',1,'p_lconst','parser.py',812),
  ('param_list -> COLON','param_list',1,'p_param_list','parser.py',817),
  ('param_list -> LPAREN param_list2 RPAREN COLON','param_list',4,'p_param_list','parser.py',818),
  ('param_list2 -> type_spec','param_list2',1,'p_param_list2','parser.py',825),
  ('param_list2 -> param_list2 COMMA type_spec','param_list2',3,'p_param_list2','parser.py',826),
  ('type_spec -> IDENT','type_spec',1,'p_type_spec','parser.py',842),
  ('type_spec -> INT','type_spec',1,'p_type_spec','parser.py',843),
  ('type_spec -> REAL','type_spec',1,'p_type_spec','parser.py',844),
  ('type_spec -> BOOL','type_spec',1,'p_type_spec','parser.py',845),
  ('range_const -> bool_type','range_const',1,'p_range_const','parser.py',849),
  ('range_const -> double_type','range_const',1,'p_range_const','parser.py',850),
  ('range_const -> int_type','range_const',1,'p_range_const','parser.py',851),
  ('range_const -> ENUM_VAL','range_const',1,'p_range_const','parser.py',852),
  ('range_const -> IDENT','range_const',1,'p_range_const','parser.py',853),
  ('bool_type -> TRUE','bool_type',1,'p_bool_type','parser.py',857),
  ('bool_type -> FALSE','bool_type',1,'p_bool_type','parser.py',858),
  ('double_type -> DOUBLE','double_type',1,'p_double_type','parser.py',862),
  ('double_type -> MINUS DOUBLE','double_type',2,'p_double_type','parser.py',863),
  ('double_type -> POS_INF','double_type',1,'p_double_type','parser.py',864),
  ('double_type -> NEG_INF','double_type',1,'p_double_type','parser.py',865),
  ('int_type -> INTEGER','int_type',1,'p_int_type','parser.py',869),
  ('int_type -> MINUS INTEGER','int_type',2,'p_int_type','parser.py',870),
  ('pos_int_type_or_pos_inf -> INTEGER','pos_int_type_or_pos_inf',1,'p_pos_int_type_or_pos_inf','parser.py',874),
  ('pos_int_type_or_pos_inf -> POS_INF','pos_int_type_or_pos_inf',1,'p_pos_int_type_or_pos_inf','parser.py',875),
  ('instance_block -> INSTANCE IDENT LCURLY instance_list RCURLY','instance_block',5,'p_instance_block','parser.py',895),
  ('instance_list -> instance_list domain_section','instance_list',2,'p_instance_list','parser.py',907),
  ('instance_list -> instance_list nonfluents_section','instance_list',2,'p_instance_list','parser.py',908),
  ('instance_list -> instance_list init_non_fluent_section','instance_list',2,'p_instance_list','parser.py',909),
  ('instance_list -> instance_list objects_section','instance_list',2,'p_instance_list','parser.py',910),
  ('instance_list -> instance_list init_state_section','instance_list',2,'p_instance_list','parser.py',911),
  ('instance_list -> instance_list max_nondef_actions_section','instance_list',2,'p_instance_list','parser.py',912),
  ('instance_list -> instance_list horizon_spec_section','instance_list',2,'p_instance_list','parser.py',913),
  ('instance_list -> instance_list discount_section','instance_list',2,'p_instance_list','parser.py',914),
  ('instance_list -> empty','instance_list',1,'p_instance_list','parser.py',915),
  ('domain_section -> DOMAIN ASSIGN_EQUAL IDENT SEMI','domain_section',4,'p_domain_section','parser.py',926),
  ('nonfluents_section -> NON_FLUENTS ASSIGN_EQUAL IDENT SEMI','nonfluents_section',4,'p_nonfluents_section','parser.py',930),
  ('objects_section -> OBJECTS LCURLY objects_list RCURLY SEMI','objects_section',5,'p_objects_section','parser.py',935),
  ('init_state_section -> INIT_STATE LCURLY pvar_inst_list RCURLY SEMI','init_state_section',5,'p_init_state_section','parser.py',940),
  ('max_nondef_actions_section -> MAX_NONDEF_ACTIONS ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI','max_nondef_actions_section',4,'p_max_nondef_actions_section','parser.py',945),
  ('horizon_spec_section -> HORIZON ASSIGN_EQUAL pos_int_type_or_pos_inf SEMI','horizon_spec_section',4,'p_horizon_spec_section','parser.py',950),
  ('horizon_spec_section -> HORIZON ASSIGN_EQUAL TERMINATE_WHEN LPAREN expr RPAREN','horizon_spec_section',6,'p_horizon_spec_section','parser.py',951),
  ('discount_section -> DISCOUNT ASSIGN_EQUAL DOUBLE SEMI','discount_section',4,'p_discount_section','parser.py',959),
  ('nonfluent_block -> NON_FLUENTS IDENT LCURLY nonfluent_list RCURLY','nonfluent_block',5,'p_nonfluent_block','parser.py',964),
  ('nonfluent_list -> nonfluent_list domain_section','nonfluent_list',2,'p_nonfluent_list','parser.py',969),
  ('nonfluent_list -> nonfluent_list objects_section','nonfluent_list',2,'p_nonfluent_list','parser.py',970),
  ('nonfluent_list -> nonfluent_list init_non_fluent_section','nonfluent_list',2,'p_nonfluent_list','parser.py',971),
  ('nonfluent_list -> empty','nonfluent_list',1,'p_nonfluent_list','parser.py',972),
  ('init_non_fluent_section -> NON_FLUENTS LCURLY pvar_inst_list RCURLY SEMI','init_non_fluent_section',5,'p_init_non_fluent_section','parser.py',981),
  ('objects_list -> objects_list objects_def','objects_list',2,'p_objects_list','parser.py',986),
  ('objects_list -> objects_def','objects_list',1,'p_objects_list','parser.py',987),
  ('objects_list -> empty','objects_list',1,'p_objects_list','parser.py',988),
  ('objects_def -> IDENT COLON LCURLY object_const_list RCURLY SEMI','objects_def',6,'p_objects_def','parser.py',996),
  ('object_const_list -> object_const_list COMMA IDENT','object_const_list',3,'p_object_const_list','parser.py',1000),
  ('object_const_list -> IDENT','object_const_list',1,'p_object_const_list','parser.py',1001),
  ('pvar_inst_list -> pvar_inst_list pvar_inst_def','pvar_inst_list',2,'p_pvar_inst_list','parser.py',1009),
  ('pvar_inst_list -> pvar_inst_def','pvar_inst_list',1,'p_pvar_inst_list','parser.py',1010),
  ('pvar_inst_def -> IDENT LPAREN lconst_list RPAREN SEMI','pvar_inst_def',5,'p_pvar_inst_def','parser.py',1018),
  ('pvar_inst_def -> IDENT SEMI','pvar_inst_def',2,'p_pvar_inst_def','parser.py',1019),
  ('pvar_inst_def -> NOT IDENT LPAREN lconst_list RPAREN SEMI','pvar_inst_def',6,'p_pvar_inst_def','parser.py',1020),
  ('pvar_inst_def -> NOT IDENT SEMI','pvar_inst_def',3,'p_pvar_inst_def','parser.py',1021),
  ('pvar_inst_def -> IDENT LPAREN lconst_list RPAREN ASSIGN_EQUAL range_const SEMI','pvar_inst_def',7,'p_pvar_inst_def','parser.py',1022),
  ('pvar_inst_def -> IDENT ASSIGN_EQUAL range_const SEMI','pvar_inst_def',4,'p_pvar_inst_def','parser.py',1023),
  ('lconst_list -> lconst_list COMMA lconst','lconst_list',3,'p_lconst_list','parser.py',1038),
  ('lconst_list -> lconst','lconst_list',1,'p_lconst_list','parser.py',1039),
  ('string_list -> string_list COMMA IDENT','string_list',3,'p_string_list','parser.py',1047),
  ('string_list -> IDENT','string_list',1,'p_string_list','parser.py',1048),
  ('string_list -> empty','string_list',1,'p_string_list','parser.py',1049),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1059),
]
